package com.example.demo.threads;

import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import org.springframework.beans.factory.annotation.Autowired;

import com.example.demo.model.Customer;

class MultipleThreadsFetchingCustomer {
	
	@Autowired
	private CreateCustomers customers;
	
	List<Customer> list = customers.createCutomers();
	public static void get() {
		
		
		ExecutorService es = Executors.newFixedThreadPool(2);
		
		
		es.execute(()->{
			List<Customer> list = customers.fetchFromXtoY(1, 100);
			for(Customer c:list) {
				System.out.println(c);
			}
		});
		
		
		es.execute(()->{
			List<Customer> list = customers.fetchFromXtoY(101, 200);
			for(Customer c:list) {
				System.out.println(c);
			}
		});
		
		
		es.execute(()->{
			List<Customer> list = customers.fetchFromXtoY(201, 300);
			for(Customer c:list) {
				System.out.println(c);
			}
		});
		
		
		es.execute(()->{
			List<Customer> list = customers.fetchFromXtoY(301, 400);
			for(Customer c:list) {
				System.out.println(c);
			}
		});
		
		es.shutdown();
	}
	

}
